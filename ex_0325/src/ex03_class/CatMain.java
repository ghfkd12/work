package ex03_class;

// 클래스는 일반적으로 하나의 소스파일에 하나의 클래스를 선언한다.
// 하나의 파일에서 여러개의 클래스를 선언한다면,
// 파일 이름과 같은 클래스에서만 public(접근제한자)를 붙일 수 있다.

class Dog{	
	
}

// 코드를 컴파일한 결과물은 코드 파일을 각각 작성한 것과 동일하게
// 각 class별로 도출되어 2개가 생성된다.

// 파일 분리 여부와 상관없이 결과물이 같기 때문에
// 분리 여부는 개발자가 원하는대로 작성해도 무방하다.

// 그러나 추후 유지보수의 편리성과 클래스 재사용을 고려해
// 하나의 파일에 하나의 클래스를 작성하는것을 추천한다.

public class CatMain {
	public static void main(String[] args) {
		
		// 객체 -> 하나의 자료형으로 표현하기 힘든것들을 객체로 만든다.
		// ex)사람 : int -> 나이, double - > 키, 몸무게, 시력 ..., String -> 이름, 혈액형 ...
		
		// 객체 생성 방법
		// 1. 객체 변수 선언하기
		// 클래스명 객체명;
		Cat c;
		
		// 2.객체 변수의 객체 대입하기
		// 객체명 = new 클래스명();
		c = new Cat(); // new Cat = 생성자 (object)
		// c는 주소에 올라가고 new Cat은 Heap에 올라간다.
		
		// 객체가 Heap영역에 올라가게 되고
		// 변수는 객체까지 접근할 수 있는 주소값을 갖는다.
		System.out.println(c);
		// ex03_class.Cat@4e50df2e
		//  패키지 /  클래스명 / 주소값
		
		
		// 클래스의 구성(그냥 암기)
		// 필드(변수), 메서드, 생성자
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	}
}
